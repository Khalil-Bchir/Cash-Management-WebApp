generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  username  String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relationships
  orders Order[]
}

model Client {
  id        String   @id @default(uuid())
  name      String
  phone     String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relationships
  orders Order[]
}

model Product {
  id        String   @id @default(uuid())
  name      String
  price     Float
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relationships
  orderProducts OrderProduct[]
}

model Order {
  id          String   @id @default(uuid())
  clientId    String
  userId      String
  paid        Boolean  @default(false)
  totalAmount Float
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relationships
  client        Client         @relation(fields: [clientId], references: [id])
  user          User           @relation(fields: [userId], references: [id])
  orderProducts OrderProduct[]
}

model OrderProduct {
  id            String   @id @default(uuid())
  quantity      Int      // Total quantity of the product in the order
  paidQuantity  Int      @default(0) // Quantity that has been paid for
  orderId       String
  productId     String
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  // Relationships
  order   Order   @relation(fields: [orderId], references: [id])
  product Product @relation(fields: [productId], references: [id])

  // Unique constraint
  @@unique([orderId, productId])
}